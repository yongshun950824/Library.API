<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="M:Library.API.Controllers.AuthorsController.GetAuthor(System.Guid)">
            <summary>
            Get an author by id
            </summary>
            <param name="authorId">Author's id</param>
            <returns>ActionResult of Author type</returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorsController.UpdateAuthor(System.Guid,Library.API.Models.AuthorForUpdate)">
            <summary>
            Update Author by id
            </summary>
            <param name="authorId">Author's id</param>
            <param name="authorForUpdate">Author's data</param>
            <returns>ActionResult of Author type. (Updated Author)</returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorsController.UpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Library.API.Models.AuthorForUpdate})">
            <summary>
            Partially update an author.
            </summary>
            <param name="authorId">Author's id</param>
            <param name="patchDocument">Set of operations to apply the author</param>
            <returns>ActionResult of Author type</returns>
            <remarks>
            Sample request  \
            PATCH /authors/id   \
            [   \
                {   \
                    "op": "replace",    \
                    "path": "/firstname",   \
                    "value": "New first name"   \
                }   \
            ]
            </remarks>
        </member>
        <member name="M:Library.API.Controllers.AuthorsControllerV2.GetAuthors">
            <summary>
            Get the authors (V2)
            </summary>
            <returns>An ActionResult of type IEnumerable of Author</returns>
            <response code="200">Returns the list of authors</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBook(System.Guid,System.Guid)">
            <summary>
            Get a book by id for specific author 
            </summary>
            <param name="authorId">The id of the author</param>
            <param name="bookId">The id of the book</param>
            <returns>ActionResult of Book type</returns>
            <response code="200">Returns the requested book</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBookWithConcatenatedAuthorName(System.Guid,System.Guid)">
            <summary>
            Get a book by id for specific author 
            </summary>
            <param name="authorId">The id of the author</param>
            <param name="bookId">The id of the book</param>
            <returns>ActionResult of Book type</returns>
            <response code="200">Returns the requested book</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.CreateBookWithAmountOfPages(System.Guid,Library.API.Models.BookForCreationWithAmountOfPages)">
            <summary>
            Create a book for a specific author
            </summary>
            <param name="authorId">The id of the book author</param>
            <param name="bookForCreationWithAmountOfPages">The book to create</param>
            <returns>An ActionResult of type Book</returns>
            <response code="422">Validation error</response>
        </member>
        <member name="T:Library.API.Models.Author">
            <summary>
            Model for Author
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.Id">
            <summary>
            Author's id
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.FirstName">
            <summary>
            Author's first name
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.LastName">
            <summary>
            Author's last name
            </summary>
        </member>
        <member name="T:Library.API.Models.AuthorForUpdate">
            <summary>
            Model for update Author action
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.FirstName">
            <summary>
            Author's first name
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.LastName">
            <summary>
            Author's last name
            </summary>
        </member>
    </members>
</doc>
